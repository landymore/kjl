name: Build and Deploy
permissions:
  contents: read

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'

    - name: 'install'
      run: npm ci

    - name: 'build'
      run: npm run build

    - name: package
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: 'dist' 
  tag:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    outputs:
      new-tag: ${{ steps.ccv.outputs.new-tag }}
      new-tag-version: ${{ steps.ccv.outputs.new-tag-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Bump tag if necessary
      id: ccv
      uses: smlx/ccv@d3de774e9b607b079940a7a86952f44643743336 # v0.9.0
    
  deploy:
    runs-on: ubuntu-latest
    needs: [build, tag]
    if: needs.tag.outputs.new-tag == 'true'
    environment: prod
    permissions:
      contents: write
      id-token: write
    steps:
    - name: artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: 'dist'

    - name: login
      uses: azure/login@v1
      with:
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}

    - name: 'publish webapp'
      id: deploy-to-webapp 
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ vars.AZURE_WEBAPP_NAME }}
        resource-group-name: ${{ vars.AZURE_RESOURCE_GROUP }}
        package: ${{ github.workspace }}/dist
        clean: true
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.tag.outputs.new-tag-version }}
        release_name: ${{ needs.tag.outputs.new-tag-version }}
        draft: false
        prerelease: false
